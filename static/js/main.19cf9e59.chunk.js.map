{"version":3,"sources":["GlobalStyle.style.js","components/Loading/Loading.style.js","components/Loading/Loading.js","components/Form/Form.style.js","components/Form/Form.js","components/Prediction/Prediction.style.js","components/Prediction/Prediction.js","components/Container/Container.style.js","components/Container/Container.js","App.style.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Loading","styled","div","css","Title","h1","Form","form","FieldGroup","Field","Label","label","Select","select","Option","option","Input","input","ButtonWrapper","Button","button","getPredict","useState","isLoading","setIsLoading","useForm","register","handleSubmit","numStrToFloat","money","parseFloat","replace","strToBoolean","value","id","onSubmit","data","dataDict","numAttr","area","rooms","bathroom","parkingSpaces","hoa","floor","propertyTax","fireInsurance","catAttr","city","pet","furniture","dataStr","JSON","stringify","htmlFor","type","min","step","required","allowNegative","decimalSeparator","suffix","prefix","Container","PredictValue","Prediction","rentAmount","goBack","formatter","Intl","NumberFormat","style","currency","format","onClick","Wrapper","isShowForm","setIsShowForm","setRentAmount","a","fetch","method","mode","headers","body","then","res","json","prediction","catch","err","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19cf9e59.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n    html, body, #root {\n        margin: 0;\n        height: 100%;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`\n\nexport default GlobalStyle\n","import styled, { css } from 'styled-components'\n\nexport const Loading = styled.div`\n  ${css`\n    display: inline-block;\n    position: relative;\n    width: 24px;\n    height: 24px;\n\n    div {\n      box-sizing: border-box;\n      display: block;\n      position: absolute;\n      top: -8px;\n      right: -8px;\n      width: 24px;\n      height: 24px;\n      margin: 8px;\n      border: 4px solid #191f43;\n      border-radius: 50%;\n      animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n      border-color: #191f43 transparent transparent transparent;\n    }\n\n    div:nth-child(1) {\n      animation-delay: -0.45s;\n    }\n\n    div:nth-child(2) {\n      animation-delay: -0.3s;\n    }\n\n    div:nth-child(3) {\n      animation-delay: -0.15s;\n    }\n\n    @keyframes lds-ring {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  `};\n`\n","import React from 'react'\n\nimport * as El from './Loading.style'\n\nconst Loading = () => {\n  return (\n    <El.Loading>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </El.Loading>\n  )\n}\n\nexport default Loading\n","import styled from 'styled-components'\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 48px;\n  color: #191f43;\n\n  @media (max-width: 640px) {\n    font-size: 24px;\n  }\n`\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nexport const FieldGroup = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 4px;\n  margin: 0px 8px;\n\n  input {\n    outline: 0;\n    border-width: 0 0 2px;\n    border-color: #a7c2f0;\n    background-color: transparent;\n\n    &:focus {\n      border-color: #3650f7;\n    }\n  }\n`\n\nexport const Field = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 4px 0;\n  flex-direction: column;\n`\n\nexport const Label = styled.label`\n  font-size: 14px;\n  color: #191f43;\n  margin-top: 8px;\n  margin-bottom: 2px;\n`\n\nexport const Select = styled.select`\n  outline: 0;\n  font-size: 16px;\n  border-color: #a7c2f0;\n  border-width: 0 0 2px;\n  background-color: transparent;\n\n  &:focus {\n    border-color: #3650f7;\n  }\n`\n\nexport const Option = styled.option``\n\nexport const Input = styled.input`\n  font-size: 16px;\n`\n\nexport const ButtonWrapper = styled.div`\n  margin: 24px 0;\n`\n\nexport const Button = styled.button`\n  cursor: pointer;\n  font-size: 18px;\n  border: none;\n  border-radius: 24px;\n  padding: 8px 16px;\n  background-color: #191f43e6;\n  color: white;\n\n  &:hover {\n    background-color: #191f43;\n  }\n`\n","import React, { useState } from 'react'\nimport Loading from '../Loading/Loading'\n\nimport NumberFormat from 'react-number-format'\nimport { useForm } from 'react-hook-form'\n\nimport * as El from './Form.style'\n\nconst Form = ({ getPredict }) => {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const { register, handleSubmit } = useForm()\n\n  const numStrToFloat = (money) =>\n    parseFloat(money.replace('R$ ', '').replace(' m2', '').replace(',', '.'))\n\n  const strToBoolean = (value) => (value === 'true' ? true : false)\n\n  const onSubmit = (data) => {\n    setIsLoading(true)\n\n    const numAttr = [\n      // area\n      numStrToFloat(data.area || '0'),\n      // rooms\n      data.rooms === '' ? 0 : parseFloat(data.rooms),\n      // bathroom\n      data.bathroom === '' ? 0 : parseFloat(data.bathroom),\n      // parkingSpaces\n      data.parkingSpaces === '' ? 0 : parseFloat(data.parkingSpaces),\n      // hoa\n      numStrToFloat(data.hoa || '0'),\n      // floor\n      data.floor === '' ? 0 : parseFloat(data.floor),\n      // propertyTax\n      numStrToFloat(data.propertyTax || '0'),\n      // fireInsurance\n      numStrToFloat(data.fireInsurance || '0'),\n    ]\n\n    const catAttr = [\n      // city\n      data.city,\n      // pet\n      strToBoolean(data.pet),\n      // furniture\n      strToBoolean(data.furniture),\n    ]\n\n    const dataDict = {\n      numAttr,\n      catAttr,\n    }\n\n    const dataStr = JSON.stringify(dataDict)\n\n    getPredict(dataStr)\n  }\n\n  return (\n    <>\n      <El.Title>\n        Preencha os dados abaixo <br />\n        e veja quanto será o valor <br />\n        do aluguel\n      </El.Title>\n      <El.Form id=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <El.FieldGroup>\n          {/* city */}\n          <El.Field>\n            <El.Label htmlFor=\"city\">Cidade</El.Label>\n            <El.Select id=\"city\" {...register('city')}>\n              <El.Option value=\"1\">São Paulo</El.Option>\n              <El.Option value=\"2\">Rio de Janeiro</El.Option>\n              <El.Option value=\"3\">Belo Horizonte</El.Option>\n              <El.Option value=\"4\">Porto Alegre</El.Option>\n              <El.Option value=\"5\">Campinas</El.Option>\n            </El.Select>\n          </El.Field>\n\n          {/* rooms */}\n          <El.Field>\n            <El.Label htmlFor=\"rooms\">Qtde quartos</El.Label>\n            <El.Input\n              id=\"rooms\"\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              required\n              {...register('rooms')}\n            />\n          </El.Field>\n\n          {/* area */}\n          <El.Field>\n            <El.Label htmlFor=\"area\">Área</El.Label>\n            <NumberFormat\n              id=\"area\"\n              allowNegative={false}\n              decimalSeparator=\",\"\n              suffix=\" m2\"\n              required\n              {...register('area')}\n            />\n          </El.Field>\n\n          {/* fire insurance */}\n          <El.Field>\n            <El.Label htmlFor=\"fire-insurance\">Seguro incêndio</El.Label>\n            <NumberFormat\n              id=\"fire-insurance\"\n              allowNegative={false}\n              decimalSeparator=\",\"\n              prefix=\"R$ \"\n              required\n              {...register('fireInsurance')}\n            />\n          </El.Field>\n        </El.FieldGroup>\n\n        <El.FieldGroup>\n          {/* pet */}\n          <El.Field>\n            <El.Label htmlFor=\"pet\">Aceita pet</El.Label>\n            <El.Select id=\"pet\" {...register('pet')}>\n              <El.Option value=\"true\">Sim</El.Option>\n              <El.Option value=\"false\">Não</El.Option>\n            </El.Select>\n          </El.Field>\n\n          {/* bathroom */}\n          <El.Field>\n            <El.Label htmlFor=\"rooms\">Qtde banheiros</El.Label>\n            <El.Input\n              id=\"bathroom\"\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              required\n              {...register('bathroom')}\n            />\n          </El.Field>\n\n          {/* hoa */}\n          <El.Field>\n            <El.Label htmlFor=\"hoa\">Condomínio</El.Label>\n            <NumberFormat\n              id=\"hoa\"\n              allowNegative={false}\n              decimalSeparator=\",\"\n              prefix=\"R$ \"\n              required\n              {...register('hoa')}\n            />\n          </El.Field>\n\n          {/* property tax */}\n          <El.Field>\n            <El.Label htmlFor=\"property-tax\">IPTU</El.Label>\n            <NumberFormat\n              id=\"property-tax\"\n              allowNegative={false}\n              decimalSeparator=\",\"\n              prefix=\"R$ \"\n              required\n              {...register('propertyTax')}\n            />\n          </El.Field>\n        </El.FieldGroup>\n\n        <El.FieldGroup>\n          {/* furniture */}\n          <El.Field>\n            <El.Label htmlFor=\"furniture\">Mobiliado</El.Label>\n            <El.Select id=\"furniture\" {...register('furniture')}>\n              <El.Option value=\"false\">Não</El.Option>\n              <El.Option value=\"true\">Sim</El.Option>\n            </El.Select>\n          </El.Field>\n\n          {/* parking spaces */}\n          <El.Field>\n            <El.Label htmlFor=\"rooms\">Qtde vagas estac.</El.Label>\n            <El.Input\n              id=\"parking-spaces\"\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              required\n              {...register('parkingSpaces')}\n            />\n          </El.Field>\n\n          {/* floor */}\n          <El.Field>\n            <El.Label htmlFor=\"floor\">Andar</El.Label>\n            <El.Input\n              id=\"floor\"\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              required\n              {...register('floor')}\n            />\n          </El.Field>\n        </El.FieldGroup>\n      </El.Form>\n      <El.ButtonWrapper>\n        {(isLoading && <Loading />) || (\n          <El.Button type=\"submit\" form=\"form\">\n            Mostrar valor!\n          </El.Button>\n        )}\n      </El.ButtonWrapper>\n    </>\n  )\n}\n\nexport default Form\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 640px) {\n    height: 100vh;\n  }\n`\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 36px;\n  color: #191f43;\n`\n\nexport const PredictValue = styled.div`\n  text-align: center;\n  font-size: 32px;\n  color: #191f43;\n`\n\nexport const Button = styled.button`\n  cursor: pointer;\n  font-size: 18px;\n  border: none;\n  border-radius: 24px;\n  padding: 8px 16px;\n  background-color: #191f43e6;\n  color: white;\n  margin-top: 24px;\n\n  &:hover {\n    background-color: #191f43;\n  }\n`\n","import React from 'react'\n\nimport * as El from './Prediction.style'\n\nconst Prediction = ({ rentAmount, goBack }) => {\n  var formatter = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL',\n  })\n\n  return (\n    <El.Container>\n      <El.Title>Valor do aluguel:</El.Title>\n      <El.PredictValue>{formatter.format(rentAmount)}</El.PredictValue>\n      <El.Button onClick={() => goBack()}>Voltar</El.Button>\n    </El.Container>\n  )\n}\n\nexport default Prediction\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 0 52px;\n\n  @media (max-width: 640px) {\n    margin: 0 16px;\n  }\n`\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 52px;\n\n  @media (max-width: 640px) {\n    margin: 0;\n  }\n`\n","import React, { useState } from 'react'\nimport Form from '../Form/Form'\nimport Prediction from '../Prediction/Prediction'\n\nimport * as El from './Container.style'\n\nconst Container = () => {\n  const [isShowForm, setIsShowForm] = useState(true)\n  const [rentAmount, setRentAmount] = useState(0)\n\n  const getPredict = async (data) => {\n    fetch('https://for-rent.herokuapp.com/predict', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        data: data,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setRentAmount(data.prediction)\n        setIsShowForm(false)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  return (\n    <El.Wrapper>\n      <El.Container>\n        {isShowForm ? (\n          <Form getPredict={(data) => getPredict(data)} />\n        ) : (\n          <Prediction\n            rentAmount={rentAmount}\n            goBack={() => setIsShowForm(true)}\n          />\n        )}\n      </El.Container>\n    </El.Wrapper>\n  )\n}\n\nexport default Container\n","import styled from 'styled-components'\n\nexport const App = styled.div`\n  background-color: #f3f6fc;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 640px) {\n    height: auto;\n  }\n`\n","import React from 'react'\nimport Container from './components/Container/Container'\n\nimport * as El from './App.style'\n\nconst App = () => (\n  <El.App>\n    <Container />\n  </El.App>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GlobalStyle from './GlobalStyle.style'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}